Q)Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).
Example 1:
Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:
Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
Constraints:
nums1.length == m
nums2.length == n
0 <= m <= 1000
0 <= n <= 1000
1 <= m + n <= 2000
-106 <= nums1[i], nums2[i] <= 106
____________________________________________________________
import java.util.*;
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) 
    {
    int m=nums1.length+nums2.length;
    int mer[]=new int[m];
    int i=0;
   while(i<nums1.length)
   {
	   mer[i]=nums1[i];
	   i++;
   }
   int j=nums1.length;int k=0;
   while(j<m && k<nums2.length)
   {
	   mer[j]=nums2[k];
	   j++;k++;
   }
    Arrays.sort(mer);
   if(m%2==0)
   {
	   return ((mer[(m/2)]+mer[(m/2)-1])/2.0);
   }
   else
   {
	return (mer[m/2]);   
   }
   
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the number of elemnt in array 1");
        int k=sc.nextInt();
        System.out.println("Enter the number of elemnt in array 2");
        int l=sc.nextInt();
        int nums1[]=new int[k];
        int nums2[]=new int [l];
        System.out.println("elements in Array 1");
        for(int i=0;i<k;i++)
        {
            nums1[i]=sc.nextInt();
        }
        System.out.println("elements in Array 2");
        for(int j=0;j<l;j++)
        {
            nums2[j]=sc.nextInt();
        }
     Solution sol=new Solution();        
    double med=sol.findMedianSortedArrays(nums1, nums2);
    System.out.println("Median "+med);
    }
}