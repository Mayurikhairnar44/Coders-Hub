Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
Q)You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:
Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:
Input: nums = [3,3], target = 6
Output: [0,1]
Constraints:
2 <= nums.length <= 104
-109 <= nums[i] <= 109
-109 <= target <= 109
Only one valid answer exists.
______________________________________________________________________________________________________________________________
import java.util.*;
	class SumTarget {
	    public int[] twoSum(int[] nums, int target) {
	    int ans[]=new int[2];
	    	for(int i=0;i<nums.length;i++)
	    {
	        for(int j=i+1;j<nums.length;j++)
	        {
	            if(nums[i]+nums[j]==target)
	            {
	             ans[0]=i;
	             ans[1]=j;
	            	nums[i]=0;
	                nums[j]=0;
	            }
	        }
	      }
	    	return ans;
	    }
	    public static void main(String args[])
	    {
	        Scanner sc=new Scanner(System.in);
//          System.out.println("Enter the number of elements in an array");
	        int k=sc.nextInt();
	        int nums[]=new int[k];
//	        System.out.println("Enter the elements in an array");
	        for(int i=0;i<k;i++)
	          nums[i]=sc.nextInt();
//	        System.out.println("enter the target value");
	        int target=sc.nextInt();
	     SumTarget  sol=new SumTarget();
	        int ans[]=sol.twoSum(nums,target);
	        System.out.println("[ "+ans[0]+" , "+ans[1]+" ]");
	    }
	}
