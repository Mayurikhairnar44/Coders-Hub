Q)Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
Input: x = 123
Output: 321
Example 2:
Input: x = -123
Output: -321
Example 3:
Input: x = 120
Output: 21
Constraints:
-231 <= x <= 231 - 1
______________________________________________________________________________________________________________________________
import java.util.Scanner;

public class Solution {
    public int reverse(int x) {
        int num = 0;int flag=0;
         if(x<0)
         {
             flag=1;
             x=Math.abs(x);
         }
        while (x != 0) {
            int digit = x % 10;

            // Check for overflow before updating num
            if (num > (Integer.MAX_VALUE - digit) / 10 ) {
                return 0;
            }
            num = num * 10 + digit;
            x = x / 10;
        }
        if(flag==1)
        return num*(-1);

        return num;
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        Solution sol = new Solution();

        System.out.println("Enter the number to be reversed");
        int num = sc.nextInt();
        System.out.println("Reversed number is " + sol.reverse(num));
    }
}
